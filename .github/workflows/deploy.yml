name: Deploy to AWS Lambda

on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Deploy Lambda Function
    runs-on: ubuntu-latest

    env:
      FUNCTION_NAME: portfolio-ssr
      HANDLER: index.handler
      RUNTIME: nodejs18.x
      ZIP_FILE: lambda.zip

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build app
        run: npm run build

      - name: Compile Lambda entrypoint
        run: npx tsc lambda/index.ts --outDir dist-lambda

      - name: Zip Lambda
        run: zip -j ${{ env.ZIP_FILE }} dist-lambda/index.js

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Check if Lambda function exists
        id: lambda-check
        run: |
          set +e
          aws lambda get-function --function-name $FUNCTION_NAME > /dev/null 2>&1
          echo "exists=$?" >> $GITHUB_OUTPUT
          set -e

      - name: Create Lambda function if not exists
        if: steps.lambda-check.outputs.exists != '0'
        run: |
          aws lambda create-function \
            --function-name $FUNCTION_NAME \
            --runtime $RUNTIME \
            --role arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.LAMBDA_EXECUTION_ROLE }} \
            --handler $HANDLER \
            --zip-file fileb://$ZIP_FILE \
            --region $AWS_REGION

      - name: Update Lambda function code
        if: steps.lambda-check.outputs.exists == '0'
        run: |
          aws lambda update-function-code \
            --function-name $FUNCTION_NAME \
            --zip-file fileb://$ZIP_FILE \
            --region $AWS_REGION
